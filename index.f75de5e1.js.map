{"mappings":"AAAA;AAEA,2BAA2B;AAC3B,MAAM,WAAW,SAAS,cAAc,CAAC;AACzC,MAAM,gBAAgB,SAAS,cAAc,CAAC;AAC9C,MAAM,YAAY,SAAS,aAAa,CAAC;AAEzC,qDAAqD;AACrD,SAAS,gBAAgB,CAAC,oBAAoB;IAC5C;AACF;AAEA,oDAAoD;AACpD,UAAU,gBAAgB,CAAC,SAAS;AAEpC,gCAAgC;AAChC,SAAS;IACP,IAAI,SAAS,KAAK,CAAC,IAAI,OAAO,IAC5B,OAAO,KAAK,CAAC;IAGf,MAAM,KAAK,kBAAkB,SAAS,KAAK;IAE3C,cAAc,WAAW,CAAC;IAC1B,SAAS,KAAK,GAAG;IACjB;AACF;AAEA,2CAA2C;AAC3C,SAAS,kBAAkB,QAAQ,EAAE,UAAU,KAAK;IAClD,MAAM,KAAK,SAAS,aAAa,CAAC;IAElC,GAAG,SAAS,CAAC,GAAG,CAAC;IACjB,GAAG,WAAW,GAAG;IAEjB,IAAI,SACF,GAAG,SAAS,CAAC,GAAG,CAAC;IAGnB,MAAM,OAAO,SAAS,aAAa,CAAC;IAEpC,KAAK,SAAS,GAAG,QAAU,kBAAkB;IAC7C,KAAK,SAAS,CAAC,GAAG,CAAC;IACnB,GAAG,WAAW,CAAC;IAEf,gCAAgC;IAChC,GAAG,gBAAgB,CAAC,SAAS;QAC3B,GAAG,SAAS,CAAC,MAAM,CAAC;QACpB;IACF;IAEA,KAAK,gBAAgB,CAAC,SAAS,CAAC;QAC9B,MAAM,eAAe,IAAI,yCAAyC;QAClE,GAAG,MAAM;QACT;IACF;IAEA,OAAO;AACT;AAEA,+CAA+C;AAC/C,SAAS;IACP,MAAM,QAAQ,EAAE;IAEhB,cAAc,gBAAgB,CAAC,mBAAmB,OAAO,CAAC,CAAC;QACzD,MAAM,IAAI,CAAC;YACT,MAAM,KAAK,WAAW,CAAC,KAAK,CAAC,GAAG;YAChC,SAAS,KAAK,SAAS,CAAC,QAAQ,CAAC;QACnC;IACF;IAEA,OAAO,YAAY,CAAC,OAAO,CAAC,SAAS,KAAK,SAAS,CAAC;AACtD;AAEA,8CAA8C;AAC9C,SAAS;IACP,MAAM,YAAY,KAAK,KAAK,CAAC,OAAO,YAAY,CAAC,OAAO,CAAC,aAAa,EAAE;IAExE,cAAc,SAAS,GAAG,IAAI,iCAAiC;IAE/D,UAAU,OAAO,CAAC,CAAC;QACjB,MAAM,KAAK,kBAAkB,KAAK,IAAI,EAAE,KAAK,OAAO;QAEpD,cAAc,WAAW,CAAC;IAC5B;AACF","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\n// Получаем элементы из DOM\nconst inputBox = document.getElementById('input-box');\nconst listContainer = document.getElementById('list-container');\nconst addButton = document.querySelector('.todo-app__button');\n\n// Загружаем сохранённые задачи при загрузке страницы\ndocument.addEventListener('DOMContentLoaded', () => {\n  loadData();\n});\n\n// Добавляем обработчик событий на кнопку \"Добавить\"\naddButton.addEventListener('click', addTask);\n\n// Функция для добавления задачи\nfunction addTask() {\n  if (inputBox.value.trim() === '') {\n    window.alert('You have to write something!');\n  }\n\n  const li = createTaskElement(inputBox.value);\n\n  listContainer.appendChild(li);\n  inputBox.value = '';\n  saveData();\n}\n\n// Функция для создания DOM-элемента задачи\nfunction createTaskElement(taskText, checked = false) {\n  const li = document.createElement('li');\n\n  li.classList.add('todo-app__item');\n  li.textContent = taskText;\n\n  if (checked) {\n    li.classList.add('todo-app__item--checked');\n  }\n\n  const span = document.createElement('span');\n\n  span.innerHTML = '\\u00d7'; // Символ крестика\n  span.classList.add('todo-app__item-remove');\n  li.appendChild(span);\n\n  // Добавляем обработчики событий\n  li.addEventListener('click', () => {\n    li.classList.toggle('todo-app__item--checked');\n    saveData();\n  });\n\n  span.addEventListener('click', (event) => {\n    event.stopPropagation(); // Предотвращаем срабатывание клика на li\n    li.remove();\n    saveData();\n  });\n\n  return li;\n}\n\n// Функция для сохранения данных в localStorage\nfunction saveData() {\n  const tasks = [];\n\n  listContainer.querySelectorAll('.todo-app__item').forEach((item) => {\n    tasks.push({\n      text: item.textContent.slice(0, -1), // Убираем крестик\n      checked: item.classList.contains('todo-app__item--checked'),\n    });\n  });\n\n  window.localStorage.setItem('tasks', JSON.stringify(tasks));\n}\n\n// Функция для загрузки данных из localStorage\nfunction loadData() {\n  const savedData = JSON.parse(window.localStorage.getItem('tasks')) || [];\n\n  listContainer.innerHTML = ''; // Очищаем список перед загрузкой\n\n  savedData.forEach((task) => {\n    const li = createTaskElement(task.text, task.checked);\n\n    listContainer.appendChild(li);\n  });\n}\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}